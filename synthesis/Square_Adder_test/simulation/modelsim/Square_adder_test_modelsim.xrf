vendor_name = ModelSim
source_file = 1, /home/wsrg/verilog/research-ayush/source/counter.v
source_file = 1, /home/wsrg/verilog/research-ayush/square_adder.v
source_file = 1, /home/wsrg/verilog/research-ayush/synthesis/Square_Adder_test/source/main.v
source_file = 1, /home/wsrg/verilog/research-ayush/synthesis/Square_Adder_test/source/clock_divider.v
source_file = 1, /home/wsrg/verilog/research-ayush/synthesis/Square_Adder_test/source/Square_adder_test.bdf
source_file = 1, /home/wsrg/verilog/research-ayush/synthesis/Square_Adder_test/pll.qip
source_file = 1, /home/wsrg/verilog/research-ayush/synthesis/Square_Adder_test/pll.v
source_file = 1, /home/wsrg/verilog/research-ayush/synthesis/Square_Adder_test/pll/pll_0002.v
source_file = 1, /home/wsrg/verilog/research-ayush/synthesis/Square_Adder_test/pll/pll_0002.qip
source_file = 1, /home/wsrg/verilog/research-ayush/synthesis/Square_Adder_test/pll.sip
source_file = 1, /home/wsrg/verilog/research-ayush/synthesis/Square_Adder_test/seven_seg.v
source_file = 1, /home/wsrg/intelFPGA_lite/17.0/quartus/libraries/megafunctions/altera_pll.v
design_name = Square_adder_test
instance = comp, \seg_0[6]~output , seg_0[6]~output, Square_adder_test, 1
instance = comp, \seg_0[5]~output , seg_0[5]~output, Square_adder_test, 1
instance = comp, \seg_0[4]~output , seg_0[4]~output, Square_adder_test, 1
instance = comp, \seg_0[3]~output , seg_0[3]~output, Square_adder_test, 1
instance = comp, \seg_0[2]~output , seg_0[2]~output, Square_adder_test, 1
instance = comp, \seg_0[1]~output , seg_0[1]~output, Square_adder_test, 1
instance = comp, \seg_0[0]~output , seg_0[0]~output, Square_adder_test, 1
instance = comp, \seg_1[6]~output , seg_1[6]~output, Square_adder_test, 1
instance = comp, \seg_1[5]~output , seg_1[5]~output, Square_adder_test, 1
instance = comp, \seg_1[4]~output , seg_1[4]~output, Square_adder_test, 1
instance = comp, \seg_1[3]~output , seg_1[3]~output, Square_adder_test, 1
instance = comp, \seg_1[2]~output , seg_1[2]~output, Square_adder_test, 1
instance = comp, \seg_1[1]~output , seg_1[1]~output, Square_adder_test, 1
instance = comp, \seg_1[0]~output , seg_1[0]~output, Square_adder_test, 1
instance = comp, \seg_2[6]~output , seg_2[6]~output, Square_adder_test, 1
instance = comp, \seg_2[5]~output , seg_2[5]~output, Square_adder_test, 1
instance = comp, \seg_2[4]~output , seg_2[4]~output, Square_adder_test, 1
instance = comp, \seg_2[3]~output , seg_2[3]~output, Square_adder_test, 1
instance = comp, \seg_2[2]~output , seg_2[2]~output, Square_adder_test, 1
instance = comp, \seg_2[1]~output , seg_2[1]~output, Square_adder_test, 1
instance = comp, \seg_2[0]~output , seg_2[0]~output, Square_adder_test, 1
instance = comp, \seg_3[6]~output , seg_3[6]~output, Square_adder_test, 1
instance = comp, \seg_3[5]~output , seg_3[5]~output, Square_adder_test, 1
instance = comp, \seg_3[4]~output , seg_3[4]~output, Square_adder_test, 1
instance = comp, \seg_3[3]~output , seg_3[3]~output, Square_adder_test, 1
instance = comp, \seg_3[2]~output , seg_3[2]~output, Square_adder_test, 1
instance = comp, \seg_3[1]~output , seg_3[1]~output, Square_adder_test, 1
instance = comp, \seg_3[0]~output , seg_3[0]~output, Square_adder_test, 1
instance = comp, \seg_4[6]~output , seg_4[6]~output, Square_adder_test, 1
instance = comp, \seg_4[5]~output , seg_4[5]~output, Square_adder_test, 1
instance = comp, \seg_4[4]~output , seg_4[4]~output, Square_adder_test, 1
instance = comp, \seg_4[3]~output , seg_4[3]~output, Square_adder_test, 1
instance = comp, \seg_4[2]~output , seg_4[2]~output, Square_adder_test, 1
instance = comp, \seg_4[1]~output , seg_4[1]~output, Square_adder_test, 1
instance = comp, \seg_4[0]~output , seg_4[0]~output, Square_adder_test, 1
instance = comp, \seg_5[6]~output , seg_5[6]~output, Square_adder_test, 1
instance = comp, \seg_5[5]~output , seg_5[5]~output, Square_adder_test, 1
instance = comp, \seg_5[4]~output , seg_5[4]~output, Square_adder_test, 1
instance = comp, \seg_5[3]~output , seg_5[3]~output, Square_adder_test, 1
instance = comp, \seg_5[2]~output , seg_5[2]~output, Square_adder_test, 1
instance = comp, \seg_5[1]~output , seg_5[1]~output, Square_adder_test, 1
instance = comp, \seg_5[0]~output , seg_5[0]~output, Square_adder_test, 1
instance = comp, \CLOCK_50~input , CLOCK_50~input, Square_adder_test, 1
instance = comp, \inst2|pll_inst|altera_pll_i|general[0].gpll~PLL_REFCLK_SELECT , inst2|pll_inst|altera_pll_i|general[0].gpll~PLL_REFCLK_SELECT, Square_adder_test, 1
instance = comp, \reset~input , reset~input, Square_adder_test, 1
instance = comp, \inst2|pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL , inst2|pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL, Square_adder_test, 1
instance = comp, \inst2|pll_inst|altera_pll_i|general[0].gpll~PLL_RECONFIG , inst2|pll_inst|altera_pll_i|general[0].gpll~PLL_RECONFIG, Square_adder_test, 1
instance = comp, \inst2|pll_inst|altera_pll_i|general[0].gpll~PLL_OUTPUT_COUNTER , inst2|pll_inst|altera_pll_i|general[0].gpll~PLL_OUTPUT_COUNTER, Square_adder_test, 1
instance = comp, \inst2|pll_inst|altera_pll_i|outclk_wire[0]~CLKENA0 , inst2|pll_inst|altera_pll_i|outclk_wire[0]~CLKENA0, Square_adder_test, 1
instance = comp, \inst|clock|Add0~53 , inst|clock|Add0~53, Square_adder_test, 1
instance = comp, \inst|clock|counter[0] , inst|clock|counter[0], Square_adder_test, 1
instance = comp, \inst|clock|Add0~57 , inst|clock|Add0~57, Square_adder_test, 1
instance = comp, \inst|clock|counter[1]~DUPLICATE , inst|clock|counter[1]~DUPLICATE, Square_adder_test, 1
instance = comp, \inst|clock|Add0~61 , inst|clock|Add0~61, Square_adder_test, 1
instance = comp, \inst|clock|counter[2] , inst|clock|counter[2], Square_adder_test, 1
instance = comp, \inst|clock|Add0~65 , inst|clock|Add0~65, Square_adder_test, 1
instance = comp, \inst|clock|counter[3] , inst|clock|counter[3], Square_adder_test, 1
instance = comp, \inst|clock|Add0~69 , inst|clock|Add0~69, Square_adder_test, 1
instance = comp, \inst|clock|counter[4] , inst|clock|counter[4], Square_adder_test, 1
instance = comp, \inst|clock|Add0~1 , inst|clock|Add0~1, Square_adder_test, 1
instance = comp, \inst|clock|Equal0~0 , inst|clock|Equal0~0, Square_adder_test, 1
instance = comp, \inst|clock|counter[1] , inst|clock|counter[1], Square_adder_test, 1
instance = comp, \inst|clock|Equal0~2 , inst|clock|Equal0~2, Square_adder_test, 1
instance = comp, \inst|clock|counter[8]~DUPLICATE , inst|clock|counter[8]~DUPLICATE, Square_adder_test, 1
instance = comp, \inst|clock|Add0~45 , inst|clock|Add0~45, Square_adder_test, 1
instance = comp, \inst|clock|Add0~41 , inst|clock|Add0~41, Square_adder_test, 1
instance = comp, \inst|clock|counter[20] , inst|clock|counter[20], Square_adder_test, 1
instance = comp, \inst|clock|Add0~97 , inst|clock|Add0~97, Square_adder_test, 1
instance = comp, \inst|clock|counter[21] , inst|clock|counter[21], Square_adder_test, 1
instance = comp, \inst|clock|Equal0~3 , inst|clock|Equal0~3, Square_adder_test, 1
instance = comp, \inst|clock|Equal0~4 , inst|clock|Equal0~4, Square_adder_test, 1
instance = comp, \inst|clock|counter[5] , inst|clock|counter[5], Square_adder_test, 1
instance = comp, \inst|clock|Add0~25 , inst|clock|Add0~25, Square_adder_test, 1
instance = comp, \inst|clock|counter[6] , inst|clock|counter[6], Square_adder_test, 1
instance = comp, \inst|clock|Add0~73 , inst|clock|Add0~73, Square_adder_test, 1
instance = comp, \inst|clock|counter[7] , inst|clock|counter[7], Square_adder_test, 1
instance = comp, \inst|clock|Add0~77 , inst|clock|Add0~77, Square_adder_test, 1
instance = comp, \inst|clock|counter[8] , inst|clock|counter[8], Square_adder_test, 1
instance = comp, \inst|clock|Add0~21 , inst|clock|Add0~21, Square_adder_test, 1
instance = comp, \inst|clock|counter[9] , inst|clock|counter[9], Square_adder_test, 1
instance = comp, \inst|clock|Add0~81 , inst|clock|Add0~81, Square_adder_test, 1
instance = comp, \inst|clock|counter[10] , inst|clock|counter[10], Square_adder_test, 1
instance = comp, \inst|clock|Add0~17 , inst|clock|Add0~17, Square_adder_test, 1
instance = comp, \inst|clock|counter[11] , inst|clock|counter[11], Square_adder_test, 1
instance = comp, \inst|clock|Add0~13 , inst|clock|Add0~13, Square_adder_test, 1
instance = comp, \inst|clock|counter[12] , inst|clock|counter[12], Square_adder_test, 1
instance = comp, \inst|clock|Add0~85 , inst|clock|Add0~85, Square_adder_test, 1
instance = comp, \inst|clock|counter[13] , inst|clock|counter[13], Square_adder_test, 1
instance = comp, \inst|clock|Add0~9 , inst|clock|Add0~9, Square_adder_test, 1
instance = comp, \inst|clock|counter[14] , inst|clock|counter[14], Square_adder_test, 1
instance = comp, \inst|clock|Add0~5 , inst|clock|Add0~5, Square_adder_test, 1
instance = comp, \inst|clock|counter[15] , inst|clock|counter[15], Square_adder_test, 1
instance = comp, \inst|clock|Add0~49 , inst|clock|Add0~49, Square_adder_test, 1
instance = comp, \inst|clock|counter[16] , inst|clock|counter[16], Square_adder_test, 1
instance = comp, \inst|clock|Add0~89 , inst|clock|Add0~89, Square_adder_test, 1
instance = comp, \inst|clock|counter[17] , inst|clock|counter[17], Square_adder_test, 1
instance = comp, \inst|clock|Add0~93 , inst|clock|Add0~93, Square_adder_test, 1
instance = comp, \inst|clock|counter[18] , inst|clock|counter[18], Square_adder_test, 1
instance = comp, \inst|clock|counter[19] , inst|clock|counter[19], Square_adder_test, 1
instance = comp, \inst|clock|Add0~33 , inst|clock|Add0~33, Square_adder_test, 1
instance = comp, \inst|clock|counter[22] , inst|clock|counter[22], Square_adder_test, 1
instance = comp, \inst|clock|Add0~29 , inst|clock|Add0~29, Square_adder_test, 1
instance = comp, \inst|clock|counter[23] , inst|clock|counter[23], Square_adder_test, 1
instance = comp, \inst|clock|Add0~37 , inst|clock|Add0~37, Square_adder_test, 1
instance = comp, \inst|clock|counter[24] , inst|clock|counter[24], Square_adder_test, 1
instance = comp, \inst|clock|Equal0~1 , inst|clock|Equal0~1, Square_adder_test, 1
instance = comp, \inst|clock|clk_out~0 , inst|clock|clk_out~0, Square_adder_test, 1
instance = comp, \inst|clock|clk_out , inst|clock|clk_out, Square_adder_test, 1
instance = comp, \inst|counter_1|count_8[0]~0 , inst|counter_1|count_8[0]~0, Square_adder_test, 1
instance = comp, \inst|counter_1|count_2[0]~DUPLICATE , inst|counter_1|count_2[0]~DUPLICATE, Square_adder_test, 1
instance = comp, \inst|counter_1|count_2[0]~1 , inst|counter_1|count_2[0]~1, Square_adder_test, 1
instance = comp, \inst|counter_1|count_2[0] , inst|counter_1|count_2[0], Square_adder_test, 1
instance = comp, \inst|counter_1|count_2[1]~0 , inst|counter_1|count_2[1]~0, Square_adder_test, 1
instance = comp, \inst|counter_1|count_2[1] , inst|counter_1|count_2[1], Square_adder_test, 1
instance = comp, \inst|counter_1|Equal0~0 , inst|counter_1|Equal0~0, Square_adder_test, 1
instance = comp, \inst|counter_1|count_8[0] , inst|counter_1|count_8[0], Square_adder_test, 1
instance = comp, \inst|counter_1|Add2~1 , inst|counter_1|Add2~1, Square_adder_test, 1
instance = comp, \inst|counter_1|count_8[1]~feeder , inst|counter_1|count_8[1]~feeder, Square_adder_test, 1
instance = comp, \inst|counter_1|count_8[1] , inst|counter_1|count_8[1], Square_adder_test, 1
instance = comp, \inst|counter_1|Add2~5 , inst|counter_1|Add2~5, Square_adder_test, 1
instance = comp, \inst|counter_1|count_8[2]~feeder , inst|counter_1|count_8[2]~feeder, Square_adder_test, 1
instance = comp, \inst|counter_1|count_8[2]~DUPLICATE , inst|counter_1|count_8[2]~DUPLICATE, Square_adder_test, 1
instance = comp, \inst|counter_1|Add2~9 , inst|counter_1|Add2~9, Square_adder_test, 1
instance = comp, \inst|counter_1|count_8[3] , inst|counter_1|count_8[3], Square_adder_test, 1
instance = comp, \inst|s0|WideOr0~0 , inst|s0|WideOr0~0, Square_adder_test, 1
instance = comp, \inst|s0|out[6] , inst|s0|out[6], Square_adder_test, 1
instance = comp, \inst|s0|WideOr1~0 , inst|s0|WideOr1~0, Square_adder_test, 1
instance = comp, \inst|s0|out[5] , inst|s0|out[5], Square_adder_test, 1
instance = comp, \inst|s0|WideOr2~0 , inst|s0|WideOr2~0, Square_adder_test, 1
instance = comp, \inst|s0|out[4] , inst|s0|out[4], Square_adder_test, 1
instance = comp, \inst|s0|WideOr3~0 , inst|s0|WideOr3~0, Square_adder_test, 1
instance = comp, \inst|s0|out[3] , inst|s0|out[3], Square_adder_test, 1
instance = comp, \inst|s0|WideOr4~0 , inst|s0|WideOr4~0, Square_adder_test, 1
instance = comp, \inst|s0|out[2] , inst|s0|out[2], Square_adder_test, 1
instance = comp, \inst|s0|WideOr5~0 , inst|s0|WideOr5~0, Square_adder_test, 1
instance = comp, \inst|s0|out[1] , inst|s0|out[1], Square_adder_test, 1
instance = comp, \inst|s0|WideOr6~0 , inst|s0|WideOr6~0, Square_adder_test, 1
instance = comp, \inst|s0|out[0] , inst|s0|out[0], Square_adder_test, 1
instance = comp, \inst|counter_1|Add2~13 , inst|counter_1|Add2~13, Square_adder_test, 1
instance = comp, \inst|counter_1|count_8[4]~DUPLICATE , inst|counter_1|count_8[4]~DUPLICATE, Square_adder_test, 1
instance = comp, \inst|counter_1|Add2~17 , inst|counter_1|Add2~17, Square_adder_test, 1
instance = comp, \inst|counter_1|count_8[5]~feeder , inst|counter_1|count_8[5]~feeder, Square_adder_test, 1
instance = comp, \inst|counter_1|count_8[5]~DUPLICATE , inst|counter_1|count_8[5]~DUPLICATE, Square_adder_test, 1
instance = comp, \inst|counter_1|Add2~21 , inst|counter_1|Add2~21, Square_adder_test, 1
instance = comp, \inst|counter_1|count_8[6] , inst|counter_1|count_8[6], Square_adder_test, 1
instance = comp, \inst|counter_1|count_8[5] , inst|counter_1|count_8[5], Square_adder_test, 1
instance = comp, \inst|counter_1|count_8[7] , inst|counter_1|count_8[7], Square_adder_test, 1
instance = comp, \inst|counter_1|Add2~25 , inst|counter_1|Add2~25, Square_adder_test, 1
instance = comp, \inst|counter_1|count_8[7]~DUPLICATE , inst|counter_1|count_8[7]~DUPLICATE, Square_adder_test, 1
instance = comp, \inst|s1|WideOr0~0 , inst|s1|WideOr0~0, Square_adder_test, 1
instance = comp, \inst|s1|out[6] , inst|s1|out[6], Square_adder_test, 1
instance = comp, \inst|s1|WideOr1~0 , inst|s1|WideOr1~0, Square_adder_test, 1
instance = comp, \inst|s1|out[5] , inst|s1|out[5], Square_adder_test, 1
instance = comp, \inst|s1|WideOr2~0 , inst|s1|WideOr2~0, Square_adder_test, 1
instance = comp, \inst|s1|out[4] , inst|s1|out[4], Square_adder_test, 1
instance = comp, \inst|s1|WideOr3~0 , inst|s1|WideOr3~0, Square_adder_test, 1
instance = comp, \inst|s1|out[3] , inst|s1|out[3], Square_adder_test, 1
instance = comp, \inst|s1|WideOr4~0 , inst|s1|WideOr4~0, Square_adder_test, 1
instance = comp, \inst|s1|out[2] , inst|s1|out[2], Square_adder_test, 1
instance = comp, \inst|s1|WideOr5~0 , inst|s1|WideOr5~0, Square_adder_test, 1
instance = comp, \inst|s1|out[1] , inst|s1|out[1], Square_adder_test, 1
instance = comp, \inst|s1|WideOr6~0 , inst|s1|WideOr6~0, Square_adder_test, 1
instance = comp, \inst|s1|out[0] , inst|s1|out[0], Square_adder_test, 1
instance = comp, \inst|counter_1|clk_out~feeder , inst|counter_1|clk_out~feeder, Square_adder_test, 1
instance = comp, \inst|counter_1|clk_out , inst|counter_1|clk_out, Square_adder_test, 1
instance = comp, \inst|counter_1|count_8[4] , inst|counter_1|count_8[4], Square_adder_test, 1
instance = comp, \inst|counter_1|count_8[2] , inst|counter_1|count_8[2], Square_adder_test, 1
instance = comp, \inst|counter_1|Equal1~0 , inst|counter_1|Equal1~0, Square_adder_test, 1
instance = comp, \inst|counter_1|Equal1~1 , inst|counter_1|Equal1~1, Square_adder_test, 1
instance = comp, \inst|counter_1|flag , inst|counter_1|flag, Square_adder_test, 1
instance = comp, \inst|counter_1|alclr~0 , inst|counter_1|alclr~0, Square_adder_test, 1
instance = comp, \inst|counter_1|alclr , inst|counter_1|alclr, Square_adder_test, 1
instance = comp, \inst|sq_signal|adder_out[1]~DUPLICATE , inst|sq_signal|adder_out[1]~DUPLICATE, Square_adder_test, 1
instance = comp, \inst|sq_signal|Mult1~72 , inst|sq_signal|Mult1~72, Square_adder_test, 1
instance = comp, \inst|sq_signal|Mult0~8 , inst|sq_signal|Mult0~8, Square_adder_test, 1
instance = comp, \inst|sq_signal|Mult1~1 , inst|sq_signal|Mult1~1, Square_adder_test, 1
instance = comp, \inst|sq_signal|adder_out[0] , inst|sq_signal|adder_out[0], Square_adder_test, 1
instance = comp, \inst|sq_signal|Mult1~5 , inst|sq_signal|Mult1~5, Square_adder_test, 1
instance = comp, \inst|sq_signal|adder_out[1] , inst|sq_signal|adder_out[1], Square_adder_test, 1
instance = comp, \inst|sq_signal|Mult1~9 , inst|sq_signal|Mult1~9, Square_adder_test, 1
instance = comp, \inst|sq_signal|adder_out[2] , inst|sq_signal|adder_out[2], Square_adder_test, 1
instance = comp, \inst|sq_signal|adder_out[3] , inst|sq_signal|adder_out[3], Square_adder_test, 1
instance = comp, \inst|sq_signal|Mult1~13 , inst|sq_signal|Mult1~13, Square_adder_test, 1
instance = comp, \inst|sq_signal|adder_out[3]~DUPLICATE , inst|sq_signal|adder_out[3]~DUPLICATE, Square_adder_test, 1
instance = comp, \inst|s2|WideOr0~0 , inst|s2|WideOr0~0, Square_adder_test, 1
instance = comp, \inst|s2|out[6] , inst|s2|out[6], Square_adder_test, 1
instance = comp, \inst|s2|WideOr1~0 , inst|s2|WideOr1~0, Square_adder_test, 1
instance = comp, \inst|s2|out[5] , inst|s2|out[5], Square_adder_test, 1
instance = comp, \inst|s2|WideOr2~0 , inst|s2|WideOr2~0, Square_adder_test, 1
instance = comp, \inst|s2|out[4] , inst|s2|out[4], Square_adder_test, 1
instance = comp, \inst|s2|WideOr3~0 , inst|s2|WideOr3~0, Square_adder_test, 1
instance = comp, \inst|s2|out[3] , inst|s2|out[3], Square_adder_test, 1
instance = comp, \inst|s2|WideOr4~0 , inst|s2|WideOr4~0, Square_adder_test, 1
instance = comp, \inst|s2|out[2] , inst|s2|out[2], Square_adder_test, 1
instance = comp, \inst|s2|WideOr5~0 , inst|s2|WideOr5~0, Square_adder_test, 1
instance = comp, \inst|s2|out[1] , inst|s2|out[1], Square_adder_test, 1
instance = comp, \inst|s2|WideOr6~0 , inst|s2|WideOr6~0, Square_adder_test, 1
instance = comp, \inst|s2|out[0] , inst|s2|out[0], Square_adder_test, 1
instance = comp, \inst|sq_signal|Mult1~17 , inst|sq_signal|Mult1~17, Square_adder_test, 1
instance = comp, \inst|sq_signal|adder_out[4]~DUPLICATE , inst|sq_signal|adder_out[4]~DUPLICATE, Square_adder_test, 1
instance = comp, \inst|sq_signal|Mult1~21 , inst|sq_signal|Mult1~21, Square_adder_test, 1
instance = comp, \inst|sq_signal|adder_out[5]~DUPLICATE , inst|sq_signal|adder_out[5]~DUPLICATE, Square_adder_test, 1
instance = comp, \inst|sq_signal|Mult1~25 , inst|sq_signal|Mult1~25, Square_adder_test, 1
instance = comp, \inst|sq_signal|adder_out[6] , inst|sq_signal|adder_out[6], Square_adder_test, 1
instance = comp, \inst|sq_signal|Mult1~29 , inst|sq_signal|Mult1~29, Square_adder_test, 1
instance = comp, \inst|sq_signal|adder_out[7] , inst|sq_signal|adder_out[7], Square_adder_test, 1
instance = comp, \inst|sq_signal|adder_out[4] , inst|sq_signal|adder_out[4], Square_adder_test, 1
instance = comp, \inst|sq_signal|adder_out[5] , inst|sq_signal|adder_out[5], Square_adder_test, 1
instance = comp, \inst|s3|WideOr0~0 , inst|s3|WideOr0~0, Square_adder_test, 1
instance = comp, \inst|s3|out[6] , inst|s3|out[6], Square_adder_test, 1
instance = comp, \inst|sq_signal|adder_out[6]~DUPLICATE , inst|sq_signal|adder_out[6]~DUPLICATE, Square_adder_test, 1
instance = comp, \inst|s3|WideOr1~0 , inst|s3|WideOr1~0, Square_adder_test, 1
instance = comp, \inst|s3|out[5] , inst|s3|out[5], Square_adder_test, 1
instance = comp, \inst|s3|WideOr2~0 , inst|s3|WideOr2~0, Square_adder_test, 1
instance = comp, \inst|s3|out[4] , inst|s3|out[4], Square_adder_test, 1
instance = comp, \inst|s3|WideOr3~0 , inst|s3|WideOr3~0, Square_adder_test, 1
instance = comp, \inst|s3|out[3] , inst|s3|out[3], Square_adder_test, 1
instance = comp, \inst|s3|WideOr4~0 , inst|s3|WideOr4~0, Square_adder_test, 1
instance = comp, \inst|s3|out[2] , inst|s3|out[2], Square_adder_test, 1
instance = comp, \inst|s3|WideOr5~0 , inst|s3|WideOr5~0, Square_adder_test, 1
instance = comp, \inst|s3|out[1] , inst|s3|out[1], Square_adder_test, 1
instance = comp, \inst|s3|WideOr6~0 , inst|s3|WideOr6~0, Square_adder_test, 1
instance = comp, \inst|s3|out[0] , inst|s3|out[0], Square_adder_test, 1
instance = comp, \inst|sq_signal|Mult1~33 , inst|sq_signal|Mult1~33, Square_adder_test, 1
instance = comp, \inst|sq_signal|adder_out[8] , inst|sq_signal|adder_out[8], Square_adder_test, 1
instance = comp, \inst|sq_signal|Mult1~37 , inst|sq_signal|Mult1~37, Square_adder_test, 1
instance = comp, \inst|sq_signal|adder_out[9] , inst|sq_signal|adder_out[9], Square_adder_test, 1
instance = comp, \inst|sq_signal|adder_out[11] , inst|sq_signal|adder_out[11], Square_adder_test, 1
instance = comp, \inst|sq_signal|Mult1~41 , inst|sq_signal|Mult1~41, Square_adder_test, 1
instance = comp, \inst|sq_signal|adder_out[10] , inst|sq_signal|adder_out[10], Square_adder_test, 1
instance = comp, \inst|sq_signal|Mult1~45 , inst|sq_signal|Mult1~45, Square_adder_test, 1
instance = comp, \inst|sq_signal|adder_out[11]~DUPLICATE , inst|sq_signal|adder_out[11]~DUPLICATE, Square_adder_test, 1
instance = comp, \inst|sq_signal|adder_out[8]~DUPLICATE , inst|sq_signal|adder_out[8]~DUPLICATE, Square_adder_test, 1
instance = comp, \inst|s4|WideOr0~0 , inst|s4|WideOr0~0, Square_adder_test, 1
instance = comp, \inst|s4|out[6] , inst|s4|out[6], Square_adder_test, 1
instance = comp, \inst|s4|WideOr1~0 , inst|s4|WideOr1~0, Square_adder_test, 1
instance = comp, \inst|s4|out[5] , inst|s4|out[5], Square_adder_test, 1
instance = comp, \inst|s4|WideOr2~0 , inst|s4|WideOr2~0, Square_adder_test, 1
instance = comp, \inst|s4|out[4] , inst|s4|out[4], Square_adder_test, 1
instance = comp, \inst|s4|WideOr3~0 , inst|s4|WideOr3~0, Square_adder_test, 1
instance = comp, \inst|s4|out[3] , inst|s4|out[3], Square_adder_test, 1
instance = comp, \inst|s4|WideOr4~0 , inst|s4|WideOr4~0, Square_adder_test, 1
instance = comp, \inst|s4|out[2] , inst|s4|out[2], Square_adder_test, 1
instance = comp, \inst|s4|WideOr5~0 , inst|s4|WideOr5~0, Square_adder_test, 1
instance = comp, \inst|s4|out[1] , inst|s4|out[1], Square_adder_test, 1
instance = comp, \inst|s4|WideOr6~0 , inst|s4|WideOr6~0, Square_adder_test, 1
instance = comp, \inst|s4|out[0] , inst|s4|out[0], Square_adder_test, 1
instance = comp, \inst|sq_signal|Mult1~49 , inst|sq_signal|Mult1~49, Square_adder_test, 1
instance = comp, \inst|sq_signal|adder_out[12] , inst|sq_signal|adder_out[12], Square_adder_test, 1
instance = comp, \inst|sq_signal|Mult1~53 , inst|sq_signal|Mult1~53, Square_adder_test, 1
instance = comp, \inst|sq_signal|adder_out[13]~DUPLICATE , inst|sq_signal|adder_out[13]~DUPLICATE, Square_adder_test, 1
instance = comp, \inst|sq_signal|Mult1~57 , inst|sq_signal|Mult1~57, Square_adder_test, 1
instance = comp, \inst|sq_signal|adder_out[14] , inst|sq_signal|adder_out[14], Square_adder_test, 1
instance = comp, \inst|sq_signal|adder_out[13] , inst|sq_signal|adder_out[13], Square_adder_test, 1
instance = comp, \inst|sq_signal|adder_out[15]~DUPLICATE , inst|sq_signal|adder_out[15]~DUPLICATE, Square_adder_test, 1
instance = comp, \inst|sq_signal|Mult1~61 , inst|sq_signal|Mult1~61, Square_adder_test, 1
instance = comp, \inst|sq_signal|adder_out[15] , inst|sq_signal|adder_out[15], Square_adder_test, 1
instance = comp, \inst|s5|WideOr0~0 , inst|s5|WideOr0~0, Square_adder_test, 1
instance = comp, \inst|s5|out[6] , inst|s5|out[6], Square_adder_test, 1
instance = comp, \inst|s5|WideOr1~0 , inst|s5|WideOr1~0, Square_adder_test, 1
instance = comp, \inst|s5|out[5] , inst|s5|out[5], Square_adder_test, 1
instance = comp, \inst|s5|WideOr2~0 , inst|s5|WideOr2~0, Square_adder_test, 1
instance = comp, \inst|s5|out[4] , inst|s5|out[4], Square_adder_test, 1
instance = comp, \inst|s5|WideOr3~0 , inst|s5|WideOr3~0, Square_adder_test, 1
instance = comp, \inst|s5|out[3] , inst|s5|out[3], Square_adder_test, 1
instance = comp, \inst|sq_signal|adder_out[12]~DUPLICATE , inst|sq_signal|adder_out[12]~DUPLICATE, Square_adder_test, 1
instance = comp, \inst|s5|WideOr4~0 , inst|s5|WideOr4~0, Square_adder_test, 1
instance = comp, \inst|s5|out[2] , inst|s5|out[2], Square_adder_test, 1
instance = comp, \inst|s5|WideOr5~0 , inst|s5|WideOr5~0, Square_adder_test, 1
instance = comp, \inst|s5|out[1] , inst|s5|out[1], Square_adder_test, 1
instance = comp, \inst|s5|WideOr6~0 , inst|s5|WideOr6~0, Square_adder_test, 1
instance = comp, \inst|s5|out[0] , inst|s5|out[0], Square_adder_test, 1
instance = comp, \~QUARTUS_CREATED_GND~I , ~QUARTUS_CREATED_GND~I, Square_adder_test, 1
